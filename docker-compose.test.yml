services:
  postgres-test:
    image: postgres:16
    container_name: postgres-test
    restart: unless-stopped
    env_file:
      - .env.test
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - app-network

  backend-test:
    image: conexao-backend-test:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: conexao-backend-test
    restart: unless-stopped
    env_file:
      - .env.test
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    environment:
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-test:${POSTGRES_PORT}/${POSTGRES_DB}
    depends_on:
      postgres-test:
        condition: service_healthy
    networks:
      - app-network

  frontend-test:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: conexao-frontend
    restart: unless-stopped
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    env_file:
      - .env.test
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge