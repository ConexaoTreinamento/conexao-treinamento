// This file is auto-generated by @hey-api/openapi-ts

export type CreateTrainerDto = {
    name?: string;
    email?: string;
    phone?: string;
    password?: string;
    address?: string;
    birthDate?: string;
    specialties?: Array<string>;
    compensationType?: 'HOURLY' | 'MONTHLY';
};

export type TrainerResponseDto = {
    id?: string;
    name?: string;
    email?: string;
    phone?: string;
    address?: string;
    birthDate?: string;
    specialties?: Array<string>;
    compensationType?: 'HOURLY' | 'MONTHLY';
    joinDate?: string;
    hoursWorked?: number;
};

export type AnamnesisRequestDto = {
    medication?: string;
    isDoctorAwareOfPhysicalActivity?: boolean;
    favoritePhysicalActivity?: string;
    hasInsomnia?: 'yes' | 'no' | 'sometimes';
    dietOrientedBy?: string;
    cardiacProblems?: string;
    hasHypertension?: boolean;
    chronicDiseases?: string;
    difficultiesInPhysicalActivities?: string;
    medicalOrientationsToAvoidPhysicalActivity?: string;
    surgeriesInTheLast12Months?: string;
    respiratoryProblems?: string;
    jointMuscularBackPain?: string;
    spinalDiscProblems?: string;
    diabetes?: string;
    smokingDuration?: string;
    alteredCholesterol?: boolean;
    osteoporosisLocation?: string;
};

export type PhysicalImpairmentRequestDto = {
    type: 'visual' | 'auditory' | 'motor' | 'intellectual' | 'other';
    name: string;
    observations?: string;
};

export type StudentRequestDto = {
    email: string;
    name: string;
    surname: string;
    gender: 'M' | 'F' | 'O';
    birthDate: string;
    phone?: string;
    profession?: string;
    street?: string;
    number?: string;
    complement?: string;
    neighborhood?: string;
    cep?: string;
    emergencyContactName?: string;
    emergencyContactPhone?: string;
    emergencyContactRelationship?: string;
    objectives?: string;
    observations?: string;
    anamnesis?: AnamnesisRequestDto;
    physicalImpairments?: Array<PhysicalImpairmentRequestDto>;
};

export type AnamnesisResponseDto = {
    medication?: string;
    isDoctorAwareOfPhysicalActivity?: boolean;
    favoritePhysicalActivity?: string;
    hasInsomnia?: 'yes' | 'no' | 'sometimes';
    dietOrientedBy?: string;
    cardiacProblems?: string;
    hasHypertension?: boolean;
    chronicDiseases?: string;
    difficultiesInPhysicalActivities?: string;
    medicalOrientationsToAvoidPhysicalActivity?: string;
    surgeriesInTheLast12Months?: string;
    respiratoryProblems?: string;
    jointMuscularBackPain?: string;
    spinalDiscProblems?: string;
    diabetes?: string;
    smokingDuration?: string;
    alteredCholesterol?: boolean;
    osteoporosisLocation?: string;
};

export type PhysicalImpairmentResponseDto = {
    id?: string;
    type?: 'visual' | 'auditory' | 'motor' | 'intellectual' | 'other';
    name?: string;
    observations?: string;
};

export type StudentPlanAssignmentResponseDto = {
    id?: string;
    studentId?: string;
    studentName?: string;
    planId?: string;
    planName?: string;
    planMaxDays?: number;
    planDurationDays?: number;
    effectiveFromTimestamp?: string;
    effectiveToTimestamp?: string;
    assignedByUserId?: string;
    assignedByUserEmail?: string;
    assignmentNotes?: string;
    createdAt?: string;
    active?: boolean;
    expired?: boolean;
    expiringSoon?: boolean;
    daysRemaining?: number;
};

export type StudentResponseDto = {
    id?: string;
    email?: string;
    name?: string;
    surname?: string;
    gender?: 'M' | 'F' | 'O';
    birthDate?: string;
    phone?: string;
    profession?: string;
    street?: string;
    number?: string;
    complement?: string;
    neighborhood?: string;
    cep?: string;
    emergencyContactName?: string;
    emergencyContactPhone?: string;
    emergencyContactRelationship?: string;
    objectives?: string;
    observations?: string;
    registrationDate?: string;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
    anamnesis?: AnamnesisResponseDto;
    physicalImpairments?: Array<PhysicalImpairmentResponseDto>;
    activePlan?: StudentPlanAssignmentResponseDto;
};

export type ExerciseRequestDto = {
    name: string;
    description?: string;
};

export type ExerciseResponseDto = {
    id?: string;
    name?: string;
    description?: string;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
};

export type TrainerScheduleRequestDto = {
    trainerId: string;
    weekday: number;
    startTime: string;
    endTime: string;
    intervalDuration?: number;
    seriesName: string;
    effectiveFromTimestamp: string;
    effectiveToTimestamp?: string;
};

export type TrainerScheduleResponseDto = {
    id?: string;
    trainerId?: string;
    trainerName?: string;
    weekday?: number;
    startTime?: string;
    endTime?: string;
    intervalDuration?: number;
    seriesName?: string;
    effectiveFromTimestamp?: string;
    effectiveToTimestamp?: string;
    active?: boolean;
    createdAt?: string;
    updatedAt?: string;
};

export type AdministratorRequestDto = {
    firstName: string;
    lastName: string;
    email: string;
    password: string;
};

export type AdministratorResponseDto = {
    id?: string;
    firstName?: string;
    lastName?: string;
    email?: string;
    fullName?: string;
    createdAt?: string;
    updatedAt?: string;
    active?: boolean;
};

export type CreateUserRequestDto = {
    email: string;
    password: string;
    role?: 'ROLE_ADMIN' | 'ROLE_TRAINER';
};

export type UserResponseDto = {
    id?: string;
    email?: string;
    role?: 'ROLE_ADMIN' | 'ROLE_TRAINER';
};

export type ListTrainersDto = {
    id?: string;
    name?: string;
    email?: string;
    phone?: string;
    address?: string;
    birthDate?: string;
    specialties?: Array<string>;
    compensationType?: 'HOURLY' | 'MONTHLY';
    active?: boolean;
    joinDate?: string;
    hoursWorked?: number;
};

export type LoginRequestDto = {
    email: string;
    password: string;
};

export type JwtResponseDto = {
    id?: string;
    token?: string;
};

export type Exercise = {
    id?: string;
    name?: string;
    description?: string;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
    active?: boolean;
    inactive?: boolean;
};

export type ParticipantExercise = {
    id?: string;
    sessionParticipant?: SessionParticipant;
    exerciseId?: string;
    exercise?: Exercise;
    setsCompleted?: number;
    repsCompleted?: number;
    weightCompleted?: number;
    isComplete?: boolean;
    exerciseNotes?: string;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
    active?: boolean;
};

export type ScheduledSession = {
    id?: string;
    sessionSeriesId?: string;
    sessionId?: string;
    trainerId?: string;
    trainer?: Trainer;
    startTime?: string;
    endTime?: string;
    maxParticipants?: number;
    seriesName?: string;
    notes?: string;
    room?: string;
    equipment?: string;
    instanceOverride?: boolean;
    effectiveFromTimestamp?: string;
    effectiveToTimestamp?: string;
    diff?: string;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
    active?: boolean;
    participants?: Array<SessionParticipant>;
    canceled?: boolean;
};

export type SessionParticipant = {
    id?: string;
    scheduledSession?: ScheduledSession;
    studentId?: string;
    student?: Student;
    participationType?: 'INCLUDED' | 'EXCLUDED';
    attendanceNotes?: string;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
    active?: boolean;
    exercises?: Array<ParticipantExercise>;
    present?: boolean;
    included?: boolean;
    excluded?: boolean;
};

export type SessionUpdateRequestDto = {
    participants?: Array<SessionParticipant>;
    notes?: string;
    trainerId?: string;
    maxParticipants?: number;
    canceled?: boolean;
    room?: string;
    equipment?: string;
};

export type Student = {
    id?: string;
    email?: string;
    name?: string;
    surname?: string;
    gender?: 'M' | 'F' | 'O';
    birthDate?: string;
    phone?: string;
    profession?: string;
    street?: string;
    number?: string;
    complement?: string;
    neighborhood?: string;
    cep?: string;
    emergencyContactName?: string;
    emergencyContactPhone?: string;
    emergencyContactRelationship?: string;
    objectives?: string;
    observations?: string;
    registrationDate?: string;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
    active?: boolean;
    inactive?: boolean;
};

export type Trainer = {
    id?: string;
    userId?: string;
    name?: string;
    phone?: string;
    address?: string;
    birthDate?: string;
    specialties?: Array<string>;
    compensationType?: 'HOURLY' | 'MONTHLY';
};

export type DayConfig = {
    weekday: number;
    active: boolean;
    startTime?: string;
    endTime?: string;
};

export type WeekSplitRequestDto = {
    trainerId: string;
    seriesName?: string;
    intervalDuration?: number;
    newEffectiveFrom: string;
    days: Array<DayConfig>;
};

export type DeactivateWeekdaysRequest = {
    trainerId?: string;
    weekdays?: Array<number>;
};

export type ScheduledSessionRequestDto = {
    sessionSeriesId?: string;
    trainerId?: string;
    startTime: string;
    endTime: string;
    maxParticipants?: number;
    seriesName?: string;
    notes?: string;
    room?: string;
    equipment?: string;
    instanceOverride?: boolean;
    effectiveFromTimestamp: string;
    retroactive?: boolean;
    diff?: string;
};

export type ParticipantExerciseResponseDto = {
    id?: string;
    exerciseId?: string;
    exerciseName?: string;
    setsAssigned?: number;
    setsCompleted?: number;
    repsAssigned?: number;
    repsCompleted?: number;
    complete?: boolean;
};

export type ScheduledSessionResponseDto = {
    id?: string;
    sessionSeriesId?: string;
    sessionId?: string;
    trainerId?: string;
    trainerName?: string;
    startTime?: string;
    endTime?: string;
    maxParticipants?: number;
    seriesName?: string;
    notes?: string;
    room?: string;
    equipment?: string;
    instanceOverride?: boolean;
    effectiveFromTimestamp?: string;
    participants?: Array<SessionParticipantResponseDto>;
};

export type SessionParticipantResponseDto = {
    id?: string;
    studentId?: string;
    studentName?: string;
    participationType?: 'INCLUDED' | 'EXCLUDED';
    attendanceNotes?: string;
    exercises?: Array<ParticipantExerciseResponseDto>;
    present?: boolean;
};

export type EnrollmentRequestDto = {
    studentId: string;
    sessions: Array<EnrollmentSessionDto>;
};

export type EnrollmentSessionDto = {
    sessionId: string;
    sessionSeriesId?: string;
    startTime: string;
    endTime: string;
    trainerId?: string;
    maxParticipants?: number;
    seriesName?: string;
};

export type StudentPlanRequestDto = {
    name: string;
    maxDays: number;
    durationDays: number;
    costBrl: number;
    description?: string;
};

export type StudentPlanResponseDto = {
    id?: string;
    name?: string;
    maxDays?: number;
    durationDays?: number;
    costBrl?: number;
    description?: string;
    active?: boolean;
    createdAt?: string;
};

export type AssignPlanRequestDto = {
    planId: string;
    effectiveFromTimestamp: string;
    assignmentNotes?: string;
};

export type SplitRequestDto = {
    splitFrom?: string;
    commitmentStatus?: 'ATTENDING' | 'NOT_ATTENDING' | 'TENTATIVE';
};

export type StudentCommitment = {
    id?: string;
    studentId?: string;
    student?: Student;
    sessionSeriesId?: string;
    trainerSchedule?: TrainerSchedule;
    commitmentStatus?: 'ATTENDING' | 'NOT_ATTENDING' | 'TENTATIVE';
    effectiveFromTimestamp?: string;
    effectiveToTimestamp?: string;
    createdAt?: string;
    currentlyActive?: boolean;
    notAttending?: boolean;
    tentative?: boolean;
    attending?: boolean;
};

export type TrainerSchedule = {
    id?: string;
    trainerId?: string;
    trainer?: Trainer;
    weekday?: number;
    startTime?: string;
    endTime?: string;
    intervalDuration?: number;
    maxParticipants?: number;
    seriesName?: string;
    effectiveFromTimestamp?: string;
    effectiveToTimestamp?: string;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
    active?: boolean;
    dayOfWeek?: 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY';
};

export type CommitmentRequestDto = {
    sessionSeriesId: string;
    commitmentStatus: 'ATTENDING' | 'NOT_ATTENDING' | 'TENTATIVE';
    effectiveFromTimestamp: string;
    effectiveToTimestamp?: string;
};

export type PatchUserRoleRequestDto = {
    role?: 'ROLE_ADMIN' | 'ROLE_TRAINER';
};

export type PatchExerciseRequestDto = {
    name?: string;
    description?: string;
};

export type PatchAdministratorRequestDto = {
    firstName?: string;
    lastName?: string;
    email?: string;
    password?: string;
};

export type Pageable = {
    page?: number;
    size?: number;
    sort?: Array<string>;
};

export type PageUserResponseDto = {
    totalPages?: number;
    totalElements?: number;
    size?: number;
    content?: Array<UserResponseDto>;
    number?: number;
    first?: boolean;
    last?: boolean;
    numberOfElements?: number;
    sort?: SortObject;
    pageable?: PageableObject;
    empty?: boolean;
};

export type PageableObject = {
    offset?: number;
    sort?: SortObject;
    pageNumber?: number;
    pageSize?: number;
    unpaged?: boolean;
    paged?: boolean;
};

export type SortObject = {
    empty?: boolean;
    unsorted?: boolean;
    sorted?: boolean;
};

export type PageStudentResponseDto = {
    totalPages?: number;
    totalElements?: number;
    size?: number;
    content?: Array<StudentResponseDto>;
    number?: number;
    first?: boolean;
    last?: boolean;
    numberOfElements?: number;
    sort?: SortObject;
    pageable?: PageableObject;
    empty?: boolean;
};

export type PageExerciseResponseDto = {
    totalPages?: number;
    totalElements?: number;
    size?: number;
    content?: Array<ExerciseResponseDto>;
    number?: number;
    first?: boolean;
    last?: boolean;
    numberOfElements?: number;
    sort?: SortObject;
    pageable?: PageableObject;
    empty?: boolean;
};

export type ScheduleResponseDto = {
    sessions?: Array<ScheduledSession>;
};

export type PageAdministratorResponseDto = {
    totalPages?: number;
    totalElements?: number;
    size?: number;
    content?: Array<AdministratorResponseDto>;
    number?: number;
    first?: boolean;
    last?: boolean;
    numberOfElements?: number;
    sort?: SortObject;
    pageable?: PageableObject;
    empty?: boolean;
};

export type SoftDeleteTrainerUserData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/trainers/{id}';
};

export type SoftDeleteTrainerUserResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type FindTrainerByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/trainers/{id}';
};

export type FindTrainerByIdResponses = {
    /**
     * OK
     */
    200: ListTrainersDto;
};

export type FindTrainerByIdResponse = FindTrainerByIdResponses[keyof FindTrainerByIdResponses];

export type UpdateTrainerAndUserData = {
    body: CreateTrainerDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/trainers/{id}';
};

export type UpdateTrainerAndUserResponses = {
    /**
     * OK
     */
    200: TrainerResponseDto;
};

export type UpdateTrainerAndUserResponse = UpdateTrainerAndUserResponses[keyof UpdateTrainerAndUserResponses];

export type DeleteData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/students/{id}';
};

export type DeleteResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type FindByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/students/{id}';
};

export type FindByIdResponses = {
    /**
     * OK
     */
    200: StudentResponseDto;
};

export type FindByIdResponse = FindByIdResponses[keyof FindByIdResponses];

export type UpdateData = {
    body: StudentRequestDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/students/{id}';
};

export type UpdateResponses = {
    /**
     * OK
     */
    200: StudentResponseDto;
};

export type UpdateResponse = UpdateResponses[keyof UpdateResponses];

export type Delete1Data = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/exercises/{id}';
};

export type Delete1Responses = {
    /**
     * OK
     */
    200: unknown;
};

export type FindById1Data = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/exercises/{id}';
};

export type FindById1Responses = {
    /**
     * OK
     */
    200: ExerciseResponseDto;
};

export type FindById1Response = FindById1Responses[keyof FindById1Responses];

export type PatchData = {
    body: PatchExerciseRequestDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/exercises/{id}';
};

export type PatchResponses = {
    /**
     * OK
     */
    200: ExerciseResponseDto;
};

export type PatchResponse = PatchResponses[keyof PatchResponses];

export type Update1Data = {
    body: ExerciseRequestDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/exercises/{id}';
};

export type Update1Responses = {
    /**
     * OK
     */
    200: ExerciseResponseDto;
};

export type Update1Response = Update1Responses[keyof Update1Responses];

export type UpdateScheduleData = {
    body: TrainerScheduleRequestDto;
    path: {
        seriesId: string;
    };
    query: {
        newEffectiveFrom: string;
    };
    url: '/api/schedule/series/{seriesId}';
};

export type UpdateScheduleResponses = {
    /**
     * OK
     */
    200: TrainerScheduleResponseDto;
};

export type UpdateScheduleResponse = UpdateScheduleResponses[keyof UpdateScheduleResponses];

export type RestorePlanData = {
    body?: never;
    path: {
        planId: string;
    };
    query?: never;
    url: '/api/plans/{planId}/restore';
};

export type RestorePlanResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type Delete2Data = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/administrators/{id}';
};

export type Delete2Responses = {
    /**
     * OK
     */
    200: unknown;
};

export type FindById2Data = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/administrators/{id}';
};

export type FindById2Responses = {
    /**
     * OK
     */
    200: AdministratorResponseDto;
};

export type FindById2Response = FindById2Responses[keyof FindById2Responses];

export type Patch1Data = {
    body: PatchAdministratorRequestDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/administrators/{id}';
};

export type Patch1Responses = {
    /**
     * OK
     */
    200: AdministratorResponseDto;
};

export type Patch1Response = Patch1Responses[keyof Patch1Responses];

export type Update2Data = {
    body: AdministratorRequestDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/administrators/{id}';
};

export type Update2Responses = {
    /**
     * OK
     */
    200: AdministratorResponseDto;
};

export type Update2Response = Update2Responses[keyof Update2Responses];

export type GetAllUsersSimpleData = {
    body?: never;
    path?: never;
    query: {
        pageable: Pageable;
    };
    url: '/users';
};

export type GetAllUsersSimpleResponses = {
    /**
     * OK
     */
    200: PageUserResponseDto;
};

export type GetAllUsersSimpleResponse = GetAllUsersSimpleResponses[keyof GetAllUsersSimpleResponses];

export type CreateUserData = {
    body: CreateUserRequestDto;
    path?: never;
    query?: never;
    url: '/users';
};

export type CreateUserResponses = {
    /**
     * OK
     */
    200: UserResponseDto;
};

export type CreateUserResponse = CreateUserResponses[keyof CreateUserResponses];

export type FindAllTrainersData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/trainers';
};

export type FindAllTrainersResponses = {
    /**
     * OK
     */
    200: Array<ListTrainersDto>;
};

export type FindAllTrainersResponse = FindAllTrainersResponses[keyof FindAllTrainersResponses];

export type CreateTrainerAndUserData = {
    body: CreateTrainerDto;
    path?: never;
    query?: never;
    url: '/trainers';
};

export type CreateTrainerAndUserResponses = {
    /**
     * OK
     */
    200: ListTrainersDto;
};

export type CreateTrainerAndUserResponse = CreateTrainerAndUserResponses[keyof CreateTrainerAndUserResponses];

export type FindAllData = {
    body?: never;
    path?: never;
    query: {
        search?: string;
        gender?: string;
        profession?: string;
        minAge?: number;
        maxAge?: number;
        registrationPeriodMinDate?: string;
        registrationPeriodMaxDate?: string;
        includeInactive?: boolean;
        pageable: Pageable;
    };
    url: '/students';
};

export type FindAllResponses = {
    /**
     * OK
     */
    200: PageStudentResponseDto;
};

export type FindAllResponse = FindAllResponses[keyof FindAllResponses];

export type CreateData = {
    body: StudentRequestDto;
    path?: never;
    query?: never;
    url: '/students';
};

export type CreateResponses = {
    /**
     * OK
     */
    200: StudentResponseDto;
};

export type CreateResponse = CreateResponses[keyof CreateResponses];

export type FindAll1Data = {
    body?: never;
    path?: never;
    query: {
        search?: string;
        includeInactive?: boolean;
        pageable: Pageable;
    };
    url: '/exercises';
};

export type FindAll1Responses = {
    /**
     * OK
     */
    200: PageExerciseResponseDto;
};

export type FindAll1Response = FindAll1Responses[keyof FindAll1Responses];

export type Create1Data = {
    body: ExerciseRequestDto;
    path?: never;
    query?: never;
    url: '/exercises';
};

export type Create1Responses = {
    /**
     * OK
     */
    200: ExerciseResponseDto;
};

export type Create1Response = Create1Responses[keyof Create1Responses];

export type LogoutData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/logout';
};

export type LogoutResponses = {
    /**
     * OK
     */
    200: string;
};

export type LogoutResponse = LogoutResponses[keyof LogoutResponses];

export type LoginData = {
    body: LoginRequestDto;
    path?: never;
    query?: never;
    url: '/auth/login';
};

export type LoginResponses = {
    /**
     * OK
     */
    200: JwtResponseDto;
};

export type LoginResponse = LoginResponses[keyof LoginResponses];

export type UpdateSessionData = {
    body: SessionUpdateRequestDto;
    path: {
        sessionId: string;
    };
    query?: never;
    url: '/api/schedule/sessions/{sessionId}';
};

export type UpdateSessionResponses = {
    /**
     * OK
     */
    200: string;
};

export type UpdateSessionResponse = UpdateSessionResponses[keyof UpdateSessionResponses];

export type GetSeriesData = {
    body?: never;
    path?: never;
    query?: {
        trainerId?: string;
    };
    url: '/api/schedule/series';
};

export type GetSeriesResponses = {
    /**
     * OK
     */
    200: Array<TrainerScheduleResponseDto>;
};

export type GetSeriesResponse = GetSeriesResponses[keyof GetSeriesResponses];

export type CreateSeriesData = {
    body: TrainerScheduleRequestDto;
    path?: never;
    query?: never;
    url: '/api/schedule/series';
};

export type CreateSeriesResponses = {
    /**
     * OK
     */
    200: TrainerScheduleResponseDto;
};

export type CreateSeriesResponse = CreateSeriesResponses[keyof CreateSeriesResponses];

export type SplitWeekData = {
    body: WeekSplitRequestDto;
    path?: never;
    query?: never;
    url: '/api/schedule/series/split-week';
};

export type SplitWeekResponses = {
    /**
     * OK
     */
    200: Array<TrainerScheduleResponseDto>;
};

export type SplitWeekResponse = SplitWeekResponses[keyof SplitWeekResponses];

export type DeactivateWeekdaysData = {
    body: DeactivateWeekdaysRequest;
    path?: never;
    query?: never;
    url: '/api/schedule/series/deactivate-weekdays';
};

export type DeactivateWeekdaysResponses = {
    /**
     * OK
     */
    200: Array<TrainerScheduleResponseDto>;
};

export type DeactivateWeekdaysResponse = DeactivateWeekdaysResponses[keyof DeactivateWeekdaysResponses];

export type CreateOneOffSessionData = {
    body: ScheduledSessionRequestDto;
    path?: never;
    query?: never;
    url: '/api/schedule/one-off';
};

export type CreateOneOffSessionResponses = {
    /**
     * OK
     */
    200: ScheduledSessionResponseDto;
};

export type CreateOneOffSessionResponse = CreateOneOffSessionResponses[keyof CreateOneOffSessionResponses];

export type EnrollStudentData = {
    body: EnrollmentRequestDto;
    path?: never;
    query?: never;
    url: '/api/schedule/enrollments';
};

export type EnrollStudentResponses = {
    /**
     * OK
     */
    200: string;
};

export type EnrollStudentResponse = EnrollStudentResponses[keyof EnrollStudentResponses];

export type GetAllPlansData = {
    body?: never;
    path?: never;
    query?: {
        includeInactive?: boolean;
    };
    url: '/api/plans';
};

export type GetAllPlansResponses = {
    /**
     * OK
     */
    200: Array<StudentPlanResponseDto>;
};

export type GetAllPlansResponse = GetAllPlansResponses[keyof GetAllPlansResponses];

export type CreatePlanData = {
    body: StudentPlanRequestDto;
    path?: never;
    query?: never;
    url: '/api/plans';
};

export type CreatePlanResponses = {
    /**
     * OK
     */
    200: StudentPlanResponseDto;
};

export type CreatePlanResponse = CreatePlanResponses[keyof CreatePlanResponses];

export type AssignPlanToStudentData = {
    body: AssignPlanRequestDto;
    path: {
        studentId: string;
    };
    query?: never;
    url: '/api/plans/students/{studentId}/assign';
};

export type AssignPlanToStudentResponses = {
    /**
     * OK
     */
    200: StudentPlanAssignmentResponseDto;
};

export type AssignPlanToStudentResponse = AssignPlanToStudentResponses[keyof AssignPlanToStudentResponses];

export type SplitCommitmentData = {
    body: SplitRequestDto;
    path: {
        commitmentId: string;
    };
    query?: never;
    url: '/api/commitments/{commitmentId}/split';
};

export type SplitCommitmentResponses = {
    /**
     * OK
     */
    200: StudentCommitment;
};

export type SplitCommitmentResponse = SplitCommitmentResponses[keyof SplitCommitmentResponses];

export type CreateCommitmentData = {
    body: CommitmentRequestDto;
    path: {
        studentId: string;
    };
    query?: never;
    url: '/api/commitments/students/{studentId}';
};

export type CreateCommitmentResponses = {
    /**
     * OK
     */
    200: StudentCommitment;
};

export type CreateCommitmentResponse = CreateCommitmentResponses[keyof CreateCommitmentResponses];

export type FindAll2Data = {
    body?: never;
    path?: never;
    query: {
        search?: string;
        includeInactive?: boolean;
        pageable: Pageable;
    };
    url: '/administrators';
};

export type FindAll2Responses = {
    /**
     * OK
     */
    200: PageAdministratorResponseDto;
};

export type FindAll2Response = FindAll2Responses[keyof FindAll2Responses];

export type Create2Data = {
    body: AdministratorRequestDto;
    path?: never;
    query?: never;
    url: '/administrators';
};

export type Create2Responses = {
    /**
     * OK
     */
    200: AdministratorResponseDto;
};

export type Create2Response = Create2Responses[keyof Create2Responses];

export type Patch2Data = {
    body: PatchUserRoleRequestDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/users/{id}';
};

export type Patch2Responses = {
    /**
     * OK
     */
    200: UserResponseDto;
};

export type Patch2Response = Patch2Responses[keyof Patch2Responses];

export type RestoreData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/students/{id}/restore';
};

export type RestoreResponses = {
    /**
     * OK
     */
    200: StudentResponseDto;
};

export type RestoreResponse = RestoreResponses[keyof RestoreResponses];

export type Restore1Data = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/exercises/{id}/restore';
};

export type Restore1Responses = {
    /**
     * OK
     */
    200: ExerciseResponseDto;
};

export type Restore1Response = Restore1Responses[keyof Restore1Responses];

export type Restore2Data = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/administrators/{id}/restore';
};

export type Restore2Responses = {
    /**
     * OK
     */
    200: AdministratorResponseDto;
};

export type Restore2Response = Restore2Responses[keyof Restore2Responses];

export type GetScheduleData = {
    body?: never;
    path?: never;
    query: {
        startDate: string;
        endDate: string;
    };
    url: '/api/schedule';
};

export type GetScheduleResponses = {
    /**
     * OK
     */
    200: ScheduleResponseDto;
};

export type GetScheduleResponse = GetScheduleResponses[keyof GetScheduleResponses];

export type DeletePlanData = {
    body?: never;
    path: {
        planId: string;
    };
    query?: never;
    url: '/api/plans/{planId}';
};

export type DeletePlanResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetPlanByIdData = {
    body?: never;
    path: {
        planId: string;
    };
    query?: never;
    url: '/api/plans/{planId}';
};

export type GetPlanByIdResponses = {
    /**
     * OK
     */
    200: StudentPlanResponseDto;
};

export type GetPlanByIdResponse = GetPlanByIdResponses[keyof GetPlanByIdResponses];

export type GetStudentPlanHistoryData = {
    body?: never;
    path: {
        studentId: string;
    };
    query?: never;
    url: '/api/plans/students/{studentId}/history';
};

export type GetStudentPlanHistoryResponses = {
    /**
     * OK
     */
    200: Array<StudentPlanAssignmentResponseDto>;
};

export type GetStudentPlanHistoryResponse = GetStudentPlanHistoryResponses[keyof GetStudentPlanHistoryResponses];

export type GetCurrentStudentPlanData = {
    body?: never;
    path: {
        studentId: string;
    };
    query?: never;
    url: '/api/plans/students/{studentId}/current';
};

export type GetCurrentStudentPlanResponses = {
    /**
     * OK
     */
    200: StudentPlanAssignmentResponseDto;
};

export type GetCurrentStudentPlanResponse = GetCurrentStudentPlanResponses[keyof GetCurrentStudentPlanResponses];

export type GetExpiringSoonAssignmentsData = {
    body?: never;
    path?: never;
    query?: {
        days?: number;
    };
    url: '/api/plans/assignments/expiring-soon';
};

export type GetExpiringSoonAssignmentsResponses = {
    /**
     * OK
     */
    200: Array<StudentPlanAssignmentResponseDto>;
};

export type GetExpiringSoonAssignmentsResponse = GetExpiringSoonAssignmentsResponses[keyof GetExpiringSoonAssignmentsResponses];

export type GetAllActiveAssignmentsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/plans/assignments/active';
};

export type GetAllActiveAssignmentsResponses = {
    /**
     * OK
     */
    200: Array<StudentPlanAssignmentResponseDto>;
};

export type GetAllActiveAssignmentsResponse = GetAllActiveAssignmentsResponses[keyof GetAllActiveAssignmentsResponses];

export type GetCommitmentsAtData = {
    body?: never;
    path: {
        studentId: string;
        seriesId: string;
    };
    query?: {
        timestamp?: string;
    };
    url: '/api/commitments/students/{studentId}/series/{seriesId}';
};

export type GetCommitmentsAtResponses = {
    /**
     * OK
     */
    200: Array<StudentCommitment>;
};

export type GetCommitmentsAtResponse = GetCommitmentsAtResponses[keyof GetCommitmentsAtResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};