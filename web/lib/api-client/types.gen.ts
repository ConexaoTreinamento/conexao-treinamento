// This file is auto-generated by @hey-api/openapi-ts

export type AnamnesisRequestDto = {
    medication?: string;
    isDoctorAwareOfPhysicalActivity?: boolean;
    favoritePhysicalActivity?: string;
    hasInsomnia?: 'YES' | 'NO' | 'SOMETIMES';
    dietOrientedBy?: string;
    cardiacProblems?: string;
    hasHypertension?: boolean;
    chronicDiseases?: string;
    difficultiesInPhysicalActivities?: string;
    medicalOrientationsToAvoidPhysicalActivity?: string;
    surgeriesInTheLast12Months?: string;
    respiratoryProblems?: string;
    jointMuscularBackPain?: string;
    spinalDiscProblems?: string;
    diabetes?: string;
    smokingDuration?: string;
    alteredCholesterol?: boolean;
    osteoporosisLocation?: string;
};

export type PhysicalImpairmentRequestDto = {
    type: 'VISUAL' | 'AUDITORY' | 'MOTOR' | 'INTELLECTUAL' | 'OTHER';
    name: string;
    observations?: string;
};

export type StudentRequestDto = {
    email: string;
    name: string;
    surname: string;
    gender: 'M' | 'F' | 'O';
    birthDate: string;
    phone?: string;
    profession?: string;
    street?: string;
    number?: string;
    complement?: string;
    neighborhood?: string;
    cep?: string;
    emergencyContactName?: string;
    emergencyContactPhone?: string;
    emergencyContactRelationship?: string;
    objectives?: string;
    observations?: string;
    anamnesis?: AnamnesisRequestDto;
    physicalImpairments?: Array<PhysicalImpairmentRequestDto>;
};

export type AnamnesisResponseDto = {
    medication?: string;
    isDoctorAwareOfPhysicalActivity?: boolean;
    favoritePhysicalActivity?: string;
    hasInsomnia?: 'YES' | 'NO' | 'SOMETIMES';
    dietOrientedBy?: string;
    cardiacProblems?: string;
    hasHypertension?: boolean;
    chronicDiseases?: string;
    difficultiesInPhysicalActivities?: string;
    medicalOrientationsToAvoidPhysicalActivity?: string;
    surgeriesInTheLast12Months?: string;
    respiratoryProblems?: string;
    jointMuscularBackPain?: string;
    spinalDiscProblems?: string;
    diabetes?: string;
    smokingDuration?: string;
    alteredCholesterol?: boolean;
    osteoporosisLocation?: string;
};

export type PhysicalImpairmentResponseDto = {
    id?: string;
    type?: 'VISUAL' | 'AUDITORY' | 'MOTOR' | 'INTELLECTUAL' | 'OTHER';
    name?: string;
    observations?: string;
};

export type StudentResponseDto = {
    id?: string;
    email?: string;
    name?: string;
    surname?: string;
    gender?: 'M' | 'F' | 'O';
    birthDate?: string;
    phone?: string;
    profession?: string;
    street?: string;
    number?: string;
    complement?: string;
    neighborhood?: string;
    cep?: string;
    emergencyContactName?: string;
    emergencyContactPhone?: string;
    emergencyContactRelationship?: string;
    objectives?: string;
    observations?: string;
    registrationDate?: string;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
    anamnesis?: AnamnesisResponseDto;
    physicalImpairments?: Array<PhysicalImpairmentResponseDto>;
};

export type ExerciseRequestDto = {
    name: string;
    description?: string;
};

export type ExerciseResponseDto = {
    id?: string;
    name?: string;
    description?: string;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
};

export type PatchExerciseRequestDto = {
    name?: string;
    description?: string;
};

export type Pageable = {
    page?: number;
    size?: number;
    sort?: Array<string>;
};

export type PageMetadata = {
    size?: number;
    number?: number;
    totalElements?: number;
    totalPages?: number;
};

export type PagedModelStudentResponseDto = {
    content?: Array<StudentResponseDto>;
    page?: PageMetadata;
};

export type PagedModelExerciseResponseDto = {
    content?: Array<ExerciseResponseDto>;
    page?: PageMetadata;
};

export type DeleteData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/students/{id}';
};

export type DeleteResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type FindByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/students/{id}';
};

export type FindByIdResponses = {
    /**
     * OK
     */
    200: StudentResponseDto;
};

export type FindByIdResponse = FindByIdResponses[keyof FindByIdResponses];

export type UpdateData = {
    body: StudentRequestDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/students/{id}';
};

export type UpdateResponses = {
    /**
     * OK
     */
    200: StudentResponseDto;
};

export type UpdateResponse = UpdateResponses[keyof UpdateResponses];

export type Delete1Data = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/exercises/{id}';
};

export type Delete1Responses = {
    /**
     * OK
     */
    200: unknown;
};

export type FindById1Data = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/exercises/{id}';
};

export type FindById1Responses = {
    /**
     * OK
     */
    200: ExerciseResponseDto;
};

export type FindById1Response = FindById1Responses[keyof FindById1Responses];

export type PatchData = {
    body: PatchExerciseRequestDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/exercises/{id}';
};

export type PatchResponses = {
    /**
     * OK
     */
    200: ExerciseResponseDto;
};

export type PatchResponse = PatchResponses[keyof PatchResponses];

export type Update1Data = {
    body: ExerciseRequestDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/exercises/{id}';
};

export type Update1Responses = {
    /**
     * OK
     */
    200: ExerciseResponseDto;
};

export type Update1Response = Update1Responses[keyof Update1Responses];

export type FindAllData = {
    body?: never;
    path?: never;
    query: {
        search?: string;
        gender?: string;
        profession?: string;
        minAge?: number;
        maxAge?: number;
        registrationPeriodMinDate?: string;
        registrationPeriodMaxDate?: string;
        includeInactive?: boolean;
        pageable: Pageable;
    };
    url: '/students';
};

export type FindAllResponses = {
    /**
     * OK
     */
    200: PagedModelStudentResponseDto;
};

export type FindAllResponse = FindAllResponses[keyof FindAllResponses];

export type CreateData = {
    body: StudentRequestDto;
    path?: never;
    query?: never;
    url: '/students';
};

export type CreateResponses = {
    /**
     * OK
     */
    200: StudentResponseDto;
};

export type CreateResponse = CreateResponses[keyof CreateResponses];

export type FindAll1Data = {
    body?: never;
    path?: never;
    query: {
        search?: string;
        includeInactive?: boolean;
        pageable: Pageable;
    };
    url: '/exercises';
};

export type FindAll1Responses = {
    /**
     * OK
     */
    200: PagedModelExerciseResponseDto;
};

export type FindAll1Response = FindAll1Responses[keyof FindAll1Responses];

export type Create1Data = {
    body: ExerciseRequestDto;
    path?: never;
    query?: never;
    url: '/exercises';
};

export type Create1Responses = {
    /**
     * OK
     */
    200: ExerciseResponseDto;
};

export type Create1Response = Create1Responses[keyof Create1Responses];

export type RestoreData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/students/{id}/restore';
};

export type RestoreResponses = {
    /**
     * OK
     */
    200: StudentResponseDto;
};

export type RestoreResponse = RestoreResponses[keyof RestoreResponses];

export type Restore1Data = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/exercises/{id}/restore';
};

export type Restore1Responses = {
    /**
     * OK
     */
    200: ExerciseResponseDto;
};

export type Restore1Response = Restore1Responses[keyof Restore1Responses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};