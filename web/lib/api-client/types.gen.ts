// This file is auto-generated by @hey-api/openapi-ts

export type CreateTrainerDto = {
    name?: string;
    email?: string;
    phone?: string;
    password?: string;
    address?: string;
    birthDate?: string;
    specialties?: Array<string>;
    compensationType?: 'HOURLY' | 'MONTHLY';
};

export type TrainerResponseDto = {
    id?: string;
    name?: string;
    email?: string;
    phone?: string;
    address?: string;
    birthDate?: string;
    specialties?: Array<string>;
    compensationType?: 'HOURLY' | 'MONTHLY';
    joinDate?: string;
    hoursWorked?: number;
};

export type TrainerScheduleRequestDto = {
    trainerId: string;
    weekday: number;
    startTime: string;
    endTime: string;
    intervalDuration?: number;
    seriesName: string;
};

export type TrainerScheduleResponseDto = {
    id?: string;
    trainerId?: string;
    weekday?: number;
    startTime?: string;
    endTime?: string;
    intervalDuration?: number;
    seriesName?: string;
    effectiveFromTimestamp?: string;
    createdAt?: string;
    updatedAt?: string;
    active?: boolean;
    weekdayName?: string;
};

export type AnamnesisRequestDto = {
    medication?: string;
    isDoctorAwareOfPhysicalActivity?: boolean;
    favoritePhysicalActivity?: string;
    hasInsomnia?: 'yes' | 'no' | 'sometimes';
    dietOrientedBy?: string;
    cardiacProblems?: string;
    hasHypertension?: boolean;
    chronicDiseases?: string;
    difficultiesInPhysicalActivities?: string;
    medicalOrientationsToAvoidPhysicalActivity?: string;
    surgeriesInTheLast12Months?: string;
    respiratoryProblems?: string;
    jointMuscularBackPain?: string;
    spinalDiscProblems?: string;
    diabetes?: string;
    smokingDuration?: string;
    alteredCholesterol?: boolean;
    osteoporosisLocation?: string;
};

export type PhysicalImpairmentRequestDto = {
    type: 'visual' | 'auditory' | 'motor' | 'intellectual' | 'other';
    name: string;
    observations?: string;
};

export type StudentRequestDto = {
    email: string;
    name: string;
    surname: string;
    gender: 'M' | 'F' | 'O';
    birthDate: string;
    phone?: string;
    profession?: string;
    street?: string;
    number?: string;
    complement?: string;
    neighborhood?: string;
    cep?: string;
    emergencyContactName?: string;
    emergencyContactPhone?: string;
    emergencyContactRelationship?: string;
    objectives?: string;
    observations?: string;
    anamnesis?: AnamnesisRequestDto;
    physicalImpairments?: Array<PhysicalImpairmentRequestDto>;
};

export type AnamnesisResponseDto = {
    medication?: string;
    isDoctorAwareOfPhysicalActivity?: boolean;
    favoritePhysicalActivity?: string;
    hasInsomnia?: 'yes' | 'no' | 'sometimes';
    dietOrientedBy?: string;
    cardiacProblems?: string;
    hasHypertension?: boolean;
    chronicDiseases?: string;
    difficultiesInPhysicalActivities?: string;
    medicalOrientationsToAvoidPhysicalActivity?: string;
    surgeriesInTheLast12Months?: string;
    respiratoryProblems?: string;
    jointMuscularBackPain?: string;
    spinalDiscProblems?: string;
    diabetes?: string;
    smokingDuration?: string;
    alteredCholesterol?: boolean;
    osteoporosisLocation?: string;
};

export type PhysicalImpairmentResponseDto = {
    id?: string;
    type?: 'visual' | 'auditory' | 'motor' | 'intellectual' | 'other';
    name?: string;
    observations?: string;
};

export type StudentResponseDto = {
    id?: string;
    email?: string;
    name?: string;
    surname?: string;
    gender?: 'M' | 'F' | 'O';
    birthDate?: string;
    phone?: string;
    profession?: string;
    street?: string;
    number?: string;
    complement?: string;
    neighborhood?: string;
    cep?: string;
    emergencyContactName?: string;
    emergencyContactPhone?: string;
    emergencyContactRelationship?: string;
    objectives?: string;
    observations?: string;
    registrationDate?: string;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
    anamnesis?: AnamnesisResponseDto;
    physicalImpairments?: Array<PhysicalImpairmentResponseDto>;
};

export type ExerciseRequestDto = {
    name: string;
    description?: string;
};

export type ExerciseResponseDto = {
    id?: string;
    name?: string;
    description?: string;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
};

export type AdministratorRequestDto = {
    firstName: string;
    lastName: string;
    email: string;
    password: string;
};

export type AdministratorResponseDto = {
    id?: string;
    firstName?: string;
    lastName?: string;
    email?: string;
    fullName?: string;
    createdAt?: string;
    updatedAt?: string;
    active?: boolean;
};

export type CreateUserRequestDto = {
    email: string;
    password: string;
    role?: 'ROLE_ADMIN' | 'ROLE_TRAINER';
};

export type UserResponseDto = {
    id?: string;
    email?: string;
    role?: 'ROLE_ADMIN' | 'ROLE_TRAINER';
};

export type ListTrainersDto = {
    id?: string;
    name?: string;
    email?: string;
    phone?: string;
    address?: string;
    birthDate?: string;
    specialties?: Array<string>;
    compensationType?: 'HOURLY' | 'MONTHLY';
    active?: boolean;
    joinDate?: string;
    hoursWorked?: number;
};

export type Exercise = {
    id?: string;
    name?: string;
    description?: string;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
    active?: boolean;
    inactive?: boolean;
};

export type ParticipantExercise = {
    id?: string;
    sessionParticipant?: SessionParticipant;
    exerciseId?: string;
    exercise?: Exercise;
    setsCompleted?: number;
    repsCompleted?: number;
    weightCompleted?: number;
    exerciseNotes?: string;
    done?: boolean;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
    active?: boolean;
};

export type ScheduledSession = {
    id?: string;
    sessionSeriesId?: string;
    sessionId?: string;
    trainerId?: string;
    trainer?: Trainer;
    startTime?: string;
    endTime?: string;
    maxParticipants?: number;
    canceled?: boolean;
    seriesName?: string;
    notes?: string;
    instanceOverride?: boolean;
    effectiveFromTimestamp?: string;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
    active?: boolean;
    participants?: Array<SessionParticipant>;
};

export type SessionParticipant = {
    id?: string;
    scheduledSession?: ScheduledSession;
    studentId?: string;
    student?: Student;
    participationType?: 'INCLUDED' | 'EXCLUDED';
    attendanceNotes?: string;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
    active?: boolean;
    exercises?: Array<ParticipantExercise>;
    present?: boolean;
    included?: boolean;
    excluded?: boolean;
};

export type SessionUpdateRequestDto = {
    participants?: Array<SessionParticipant>;
    notes?: string;
};

export type Student = {
    id?: string;
    email?: string;
    name?: string;
    surname?: string;
    gender?: 'M' | 'F' | 'O';
    birthDate?: string;
    phone?: string;
    profession?: string;
    street?: string;
    number?: string;
    complement?: string;
    neighborhood?: string;
    cep?: string;
    emergencyContactName?: string;
    emergencyContactPhone?: string;
    emergencyContactRelationship?: string;
    objectives?: string;
    observations?: string;
    registrationDate?: string;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
    active?: boolean;
    inactive?: boolean;
};

export type Trainer = {
    id?: string;
    userId?: string;
    name?: string;
    phone?: string;
    address?: string;
    birthDate?: string;
    specialties?: Array<string>;
    compensationType?: 'HOURLY' | 'MONTHLY';
};

export type SessionTrainerUpdateRequestDto = {
    trainerId?: string;
};

export type SessionParticipantAddRequestDto = {
    studentId?: string;
};

export type SessionParticipantPresenceRequestDto = {
    present?: boolean;
    notes?: string;
};

export type ParticipantExerciseCreateRequestDto = {
    exerciseId?: string;
    setsCompleted?: number;
    repsCompleted?: number;
    weightCompleted?: number;
    exerciseNotes?: string;
    done?: boolean;
};

export type SessionCancelRequestDto = {
    cancel?: boolean;
    reason?: string;
};

export type OneOffSessionCreateRequestDto = {
    seriesName?: string;
    trainerId?: string;
    startTime?: string;
    endTime?: string;
    maxParticipants?: number;
    notes?: string;
};

export type ParticipantExerciseResponseDto = {
    id?: string;
    exerciseId?: string;
    exerciseName?: string;
    setsCompleted?: number;
    repsCompleted?: number;
    weightCompleted?: number;
    exerciseNotes?: string;
    done?: boolean;
};

export type SessionResponseDto = {
    sessionId?: string;
    trainerId?: string;
    trainerName?: string;
    startTime?: string;
    endTime?: string;
    seriesName?: string;
    notes?: string;
    instanceOverride?: boolean;
    students?: Array<StudentCommitmentResponseDto>;
    canceled?: boolean;
    maxParticipants?: number;
    presentCount?: number;
};

export type StudentCommitmentResponseDto = {
    studentId?: string;
    studentName?: string;
    commitmentStatus?: 'ATTENDING' | 'NOT_ATTENDING' | 'TENTATIVE';
    exercises?: Array<ExerciseResponseDto>;
    participantExercises?: Array<ParticipantExerciseResponseDto>;
    present?: boolean;
    attendanceNotes?: string;
};

export type StudentPlanRequestDto = {
    name: string;
    maxDays: number;
    durationDays: number;
    description?: string;
};

export type StudentPlanResponseDto = {
    id?: string;
    name?: string;
    maxDays?: number;
    durationDays?: number;
    description?: string;
    active?: boolean;
    createdAt?: string;
};

export type AssignPlanRequestDto = {
    planId: string;
    startDate: string;
    assignmentNotes?: string;
};

export type StudentPlanAssignmentResponseDto = {
    id?: string;
    studentId?: string;
    studentName?: string;
    planId?: string;
    planName?: string;
    planMaxDays?: number;
    planDurationDays?: number;
    startDate?: string;
    endDate?: string;
    assignedByUserId?: string;
    assignedByUserEmail?: string;
    assignmentNotes?: string;
    createdAt?: string;
    active?: boolean;
    expired?: boolean;
    expiringSoon?: boolean;
    daysRemaining?: number;
};

export type StudentCommitmentRequestDto = {
    commitmentStatus: 'ATTENDING' | 'NOT_ATTENDING' | 'TENTATIVE';
    effectiveFromTimestamp?: string;
};

export type CommitmentDetailResponseDto = {
    id?: string;
    studentId?: string;
    studentName?: string;
    sessionSeriesId?: string;
    seriesName?: string;
    commitmentStatus?: 'ATTENDING' | 'NOT_ATTENDING' | 'TENTATIVE';
    effectiveFromTimestamp?: string;
    createdAt?: string;
};

export type BulkCommitmentRequestDto = {
    sessionSeriesIds: Array<string>;
    commitmentStatus: 'ATTENDING' | 'NOT_ATTENDING' | 'TENTATIVE';
    effectiveFromTimestamp?: string;
};

export type LoginRequestDto = {
    email: string;
    password: string;
};

export type JwtResponseDto = {
    id?: string;
    token?: string;
};

export type PatchUserRoleRequestDto = {
    role?: 'ROLE_ADMIN' | 'ROLE_TRAINER';
};

export type ParticipantExerciseUpdateRequestDto = {
    setsCompleted?: number;
    repsCompleted?: number;
    weightCompleted?: number;
    exerciseNotes?: string;
    done?: boolean;
};

export type PatchExerciseRequestDto = {
    name?: string;
    description?: string;
};

export type PatchAdministratorRequestDto = {
    firstName?: string;
    lastName?: string;
    email?: string;
    password?: string;
};

export type Pageable = {
    page?: number;
    size?: number;
    sort?: Array<string>;
};

export type PageUserResponseDto = {
    totalElements?: number;
    totalPages?: number;
    size?: number;
    content?: Array<UserResponseDto>;
    number?: number;
    first?: boolean;
    last?: boolean;
    numberOfElements?: number;
    pageable?: PageableObject;
    sort?: SortObject;
    empty?: boolean;
};

export type PageableObject = {
    offset?: number;
    pageNumber?: number;
    pageSize?: number;
    sort?: SortObject;
    paged?: boolean;
    unpaged?: boolean;
};

export type SortObject = {
    empty?: boolean;
    sorted?: boolean;
    unsorted?: boolean;
};

export type PageStudentResponseDto = {
    totalElements?: number;
    totalPages?: number;
    size?: number;
    content?: Array<StudentResponseDto>;
    number?: number;
    first?: boolean;
    last?: boolean;
    numberOfElements?: number;
    pageable?: PageableObject;
    sort?: SortObject;
    empty?: boolean;
};

export type ScheduleResponseDto = {
    sessions?: Array<SessionResponseDto>;
};

export type PageExerciseResponseDto = {
    totalElements?: number;
    totalPages?: number;
    size?: number;
    content?: Array<ExerciseResponseDto>;
    number?: number;
    first?: boolean;
    last?: boolean;
    numberOfElements?: number;
    pageable?: PageableObject;
    sort?: SortObject;
    empty?: boolean;
};

export type TrainerSchedule = {
    id?: string;
    trainerId?: string;
    weekday?: number;
    startTime?: string;
    endTime?: string;
    intervalDuration?: number;
    seriesName?: string;
    effectiveFromTimestamp?: string;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
    active?: boolean;
    dayOfWeek?: 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY';
};

export type PageAdministratorResponseDto = {
    totalElements?: number;
    totalPages?: number;
    size?: number;
    content?: Array<AdministratorResponseDto>;
    number?: number;
    first?: boolean;
    last?: boolean;
    numberOfElements?: number;
    pageable?: PageableObject;
    sort?: SortObject;
    empty?: boolean;
};

export type SoftDeleteTrainerUserData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/trainers/{id}';
};

export type SoftDeleteTrainerUserResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type FindTrainerByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/trainers/{id}';
};

export type FindTrainerByIdResponses = {
    /**
     * OK
     */
    200: ListTrainersDto;
};

export type FindTrainerByIdResponse = FindTrainerByIdResponses[keyof FindTrainerByIdResponses];

export type UpdateTrainerAndUserData = {
    body: CreateTrainerDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/trainers/{id}';
};

export type UpdateTrainerAndUserResponses = {
    /**
     * OK
     */
    200: TrainerResponseDto;
};

export type UpdateTrainerAndUserResponse = UpdateTrainerAndUserResponses[keyof UpdateTrainerAndUserResponses];

export type DeleteScheduleData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/trainer-schedules/{id}';
};

export type DeleteScheduleResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetScheduleByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/trainer-schedules/{id}';
};

export type GetScheduleByIdResponses = {
    /**
     * OK
     */
    200: TrainerScheduleResponseDto;
};

export type GetScheduleByIdResponse = GetScheduleByIdResponses[keyof GetScheduleByIdResponses];

export type UpdateScheduleData = {
    body: TrainerScheduleRequestDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/trainer-schedules/{id}';
};

export type UpdateScheduleResponses = {
    /**
     * OK
     */
    200: TrainerScheduleResponseDto;
};

export type UpdateScheduleResponse = UpdateScheduleResponses[keyof UpdateScheduleResponses];

export type DeleteStudentData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/students/{id}';
};

export type DeleteStudentResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type FindStudentByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/students/{id}';
};

export type FindStudentByIdResponses = {
    /**
     * OK
     */
    200: StudentResponseDto;
};

export type FindStudentByIdResponse = FindStudentByIdResponses[keyof FindStudentByIdResponses];

export type UpdateStudentData = {
    body: StudentRequestDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/students/{id}';
};

export type UpdateStudentResponses = {
    /**
     * OK
     */
    200: StudentResponseDto;
};

export type UpdateStudentResponse = UpdateStudentResponses[keyof UpdateStudentResponses];

export type DeleteExerciseData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/exercises/{id}';
};

export type DeleteExerciseResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type FindExerciseByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/exercises/{id}';
};

export type FindExerciseByIdResponses = {
    /**
     * OK
     */
    200: ExerciseResponseDto;
};

export type FindExerciseByIdResponse = FindExerciseByIdResponses[keyof FindExerciseByIdResponses];

export type PatchExerciseData = {
    body: PatchExerciseRequestDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/exercises/{id}';
};

export type PatchExerciseResponses = {
    /**
     * OK
     */
    200: ExerciseResponseDto;
};

export type PatchExerciseResponse = PatchExerciseResponses[keyof PatchExerciseResponses];

export type UpdateExerciseData = {
    body: ExerciseRequestDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/exercises/{id}';
};

export type UpdateExerciseResponses = {
    /**
     * OK
     */
    200: ExerciseResponseDto;
};

export type UpdateExerciseResponse = UpdateExerciseResponses[keyof UpdateExerciseResponses];

export type DeleteAdministratorData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/administrators/{id}';
};

export type DeleteAdministratorResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type FindAdministratorByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/administrators/{id}';
};

export type FindAdministratorByIdResponses = {
    /**
     * OK
     */
    200: AdministratorResponseDto;
};

export type FindAdministratorByIdResponse = FindAdministratorByIdResponses[keyof FindAdministratorByIdResponses];

export type PatchAdministratorData = {
    body: PatchAdministratorRequestDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/administrators/{id}';
};

export type PatchAdministratorResponses = {
    /**
     * OK
     */
    200: AdministratorResponseDto;
};

export type PatchAdministratorResponse = PatchAdministratorResponses[keyof PatchAdministratorResponses];

export type UpdateAdministratorData = {
    body: AdministratorRequestDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/administrators/{id}';
};

export type UpdateAdministratorResponses = {
    /**
     * OK
     */
    200: AdministratorResponseDto;
};

export type UpdateAdministratorResponse = UpdateAdministratorResponses[keyof UpdateAdministratorResponses];

export type GetAllUsersSimpleData = {
    body?: never;
    path?: never;
    query: {
        pageable: Pageable;
    };
    url: '/users';
};

export type GetAllUsersSimpleResponses = {
    /**
     * OK
     */
    200: PageUserResponseDto;
};

export type GetAllUsersSimpleResponse = GetAllUsersSimpleResponses[keyof GetAllUsersSimpleResponses];

export type CreateUserData = {
    body: CreateUserRequestDto;
    path?: never;
    query?: never;
    url: '/users';
};

export type CreateUserResponses = {
    /**
     * OK
     */
    200: UserResponseDto;
};

export type CreateUserResponse = CreateUserResponses[keyof CreateUserResponses];

export type FindAllTrainersData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/trainers';
};

export type FindAllTrainersResponses = {
    /**
     * OK
     */
    200: Array<ListTrainersDto>;
};

export type FindAllTrainersResponse = FindAllTrainersResponses[keyof FindAllTrainersResponses];

export type CreateTrainerAndUserData = {
    body: CreateTrainerDto;
    path?: never;
    query?: never;
    url: '/trainers';
};

export type CreateTrainerAndUserResponses = {
    /**
     * OK
     */
    200: ListTrainersDto;
};

export type CreateTrainerAndUserResponse = CreateTrainerAndUserResponses[keyof CreateTrainerAndUserResponses];

export type GetAllSchedulesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/trainer-schedules';
};

export type GetAllSchedulesResponses = {
    /**
     * OK
     */
    200: Array<TrainerScheduleResponseDto>;
};

export type GetAllSchedulesResponse = GetAllSchedulesResponses[keyof GetAllSchedulesResponses];

export type CreateScheduleData = {
    body: TrainerScheduleRequestDto;
    path?: never;
    query?: never;
    url: '/trainer-schedules';
};

export type CreateScheduleResponses = {
    /**
     * OK
     */
    200: TrainerScheduleResponseDto;
};

export type CreateScheduleResponse = CreateScheduleResponses[keyof CreateScheduleResponses];

export type FindAllStudentsData = {
    body?: never;
    path?: never;
    query: {
        search?: string;
        gender?: string;
        profession?: string;
        minAge?: number;
        maxAge?: number;
        registrationPeriodMinDate?: string;
        registrationPeriodMaxDate?: string;
        includeInactive?: boolean;
        pageable: Pageable;
    };
    url: '/students';
};

export type FindAllStudentsResponses = {
    /**
     * OK
     */
    200: PageStudentResponseDto;
};

export type FindAllStudentsResponse = FindAllStudentsResponses[keyof FindAllStudentsResponses];

export type CreateStudentData = {
    body: StudentRequestDto;
    path?: never;
    query?: never;
    url: '/students';
};

export type CreateStudentResponses = {
    /**
     * OK
     */
    200: StudentResponseDto;
};

export type CreateStudentResponse = CreateStudentResponses[keyof CreateStudentResponses];

export type GetSessionData = {
    body?: never;
    path: {
        sessionId: string;
    };
    query?: {
        trainerId?: string;
    };
    url: '/schedule/sessions/{sessionId}';
};

export type GetSessionResponses = {
    /**
     * OK
     */
    200: SessionResponseDto;
};

export type GetSessionResponse = GetSessionResponses[keyof GetSessionResponses];

export type UpdateSessionData = {
    body: SessionUpdateRequestDto;
    path: {
        sessionId: string;
    };
    query?: never;
    url: '/schedule/sessions/{sessionId}';
};

export type UpdateSessionResponses = {
    /**
     * OK
     */
    200: string;
};

export type UpdateSessionResponse = UpdateSessionResponses[keyof UpdateSessionResponses];

export type UpdateTrainerData = {
    body: SessionTrainerUpdateRequestDto;
    path: {
        sessionId: string;
    };
    query?: never;
    url: '/schedule/sessions/{sessionId}/trainer';
};

export type UpdateTrainerResponses = {
    /**
     * OK
     */
    200: string;
};

export type UpdateTrainerResponse = UpdateTrainerResponses[keyof UpdateTrainerResponses];

export type AddParticipantData = {
    body: SessionParticipantAddRequestDto;
    path: {
        sessionId: string;
    };
    query?: never;
    url: '/schedule/sessions/{sessionId}/participants';
};

export type AddParticipantResponses = {
    /**
     * OK
     */
    200: string;
};

export type AddParticipantResponse = AddParticipantResponses[keyof AddParticipantResponses];

export type UpdatePresenceData = {
    body: SessionParticipantPresenceRequestDto;
    path: {
        sessionId: string;
        studentId: string;
    };
    query?: never;
    url: '/schedule/sessions/{sessionId}/participants/{studentId}/presence';
};

export type UpdatePresenceResponses = {
    /**
     * OK
     */
    200: string;
};

export type UpdatePresenceResponse = UpdatePresenceResponses[keyof UpdatePresenceResponses];

export type AddExerciseData = {
    body: ParticipantExerciseCreateRequestDto;
    path: {
        sessionId: string;
        studentId: string;
    };
    query?: never;
    url: '/schedule/sessions/{sessionId}/participants/{studentId}/exercises';
};

export type AddExerciseResponses = {
    /**
     * OK
     */
    200: string;
};

export type AddExerciseResponse = AddExerciseResponses[keyof AddExerciseResponses];

export type CancelOrRestoreData = {
    body: SessionCancelRequestDto;
    path: {
        sessionId: string;
    };
    query?: never;
    url: '/schedule/sessions/{sessionId}/cancel';
};

export type CancelOrRestoreResponses = {
    /**
     * OK
     */
    200: string;
};

export type CancelOrRestoreResponse = CancelOrRestoreResponses[keyof CancelOrRestoreResponses];

export type CreateOneOffData = {
    body: OneOffSessionCreateRequestDto;
    path?: never;
    query?: never;
    url: '/schedule/sessions/one-off';
};

export type CreateOneOffResponses = {
    /**
     * OK
     */
    200: SessionResponseDto;
};

export type CreateOneOffResponse = CreateOneOffResponses[keyof CreateOneOffResponses];

export type GetAllPlansData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/plans';
};

export type GetAllPlansResponses = {
    /**
     * OK
     */
    200: Array<StudentPlanResponseDto>;
};

export type GetAllPlansResponse = GetAllPlansResponses[keyof GetAllPlansResponses];

export type CreatePlanData = {
    body: StudentPlanRequestDto;
    path?: never;
    query?: never;
    url: '/plans';
};

export type CreatePlanResponses = {
    /**
     * OK
     */
    200: StudentPlanResponseDto;
};

export type CreatePlanResponse = CreatePlanResponses[keyof CreatePlanResponses];

export type AssignPlanToStudentData = {
    body: AssignPlanRequestDto;
    path: {
        studentId: string;
    };
    query?: never;
    url: '/plans/students/{studentId}/assign';
};

export type AssignPlanToStudentResponses = {
    /**
     * OK
     */
    200: StudentPlanAssignmentResponseDto;
};

export type AssignPlanToStudentResponse = AssignPlanToStudentResponses[keyof AssignPlanToStudentResponses];

export type FindAllExercisesData = {
    body?: never;
    path?: never;
    query: {
        search?: string;
        includeInactive?: boolean;
        pageable: Pageable;
    };
    url: '/exercises';
};

export type FindAllExercisesResponses = {
    /**
     * OK
     */
    200: PageExerciseResponseDto;
};

export type FindAllExercisesResponse = FindAllExercisesResponses[keyof FindAllExercisesResponses];

export type CreateExerciseData = {
    body: ExerciseRequestDto;
    path?: never;
    query?: never;
    url: '/exercises';
};

export type CreateExerciseResponses = {
    /**
     * OK
     */
    200: ExerciseResponseDto;
};

export type CreateExerciseResponse = CreateExerciseResponses[keyof CreateExerciseResponses];

export type UpdateCommitmentData = {
    body: StudentCommitmentRequestDto;
    path: {
        studentId: string;
        sessionSeriesId: string;
    };
    query?: never;
    url: '/commitments/students/{studentId}/sessions/{sessionSeriesId}';
};

export type UpdateCommitmentResponses = {
    /**
     * OK
     */
    200: CommitmentDetailResponseDto;
};

export type UpdateCommitmentResponse = UpdateCommitmentResponses[keyof UpdateCommitmentResponses];

export type BulkUpdateCommitmentsData = {
    body: BulkCommitmentRequestDto;
    path: {
        studentId: string;
    };
    query?: never;
    url: '/commitments/students/{studentId}/bulk';
};

export type BulkUpdateCommitmentsResponses = {
    /**
     * OK
     */
    200: Array<CommitmentDetailResponseDto>;
};

export type BulkUpdateCommitmentsResponse = BulkUpdateCommitmentsResponses[keyof BulkUpdateCommitmentsResponses];

export type LogoutData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/logout';
};

export type LogoutResponses = {
    /**
     * OK
     */
    200: string;
};

export type LogoutResponse = LogoutResponses[keyof LogoutResponses];

export type LoginData = {
    body: LoginRequestDto;
    path?: never;
    query?: never;
    url: '/auth/login';
};

export type LoginResponses = {
    /**
     * OK
     */
    200: JwtResponseDto;
};

export type LoginResponse = LoginResponses[keyof LoginResponses];

export type FindAllAdministratorsData = {
    body?: never;
    path?: never;
    query: {
        search?: string;
        includeInactive?: boolean;
        pageable: Pageable;
    };
    url: '/administrators';
};

export type FindAllAdministratorsResponses = {
    /**
     * OK
     */
    200: PageAdministratorResponseDto;
};

export type FindAllAdministratorsResponse = FindAllAdministratorsResponses[keyof FindAllAdministratorsResponses];

export type CreateAdministratorData = {
    body: AdministratorRequestDto;
    path?: never;
    query?: never;
    url: '/administrators';
};

export type CreateAdministratorResponses = {
    /**
     * OK
     */
    200: AdministratorResponseDto;
};

export type CreateAdministratorResponse = CreateAdministratorResponses[keyof CreateAdministratorResponses];

export type PatchData = {
    body: PatchUserRoleRequestDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/users/{id}';
};

export type PatchResponses = {
    /**
     * OK
     */
    200: UserResponseDto;
};

export type PatchResponse = PatchResponses[keyof PatchResponses];

export type RestoreStudentData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/students/{id}/restore';
};

export type RestoreStudentResponses = {
    /**
     * OK
     */
    200: StudentResponseDto;
};

export type RestoreStudentResponse = RestoreStudentResponses[keyof RestoreStudentResponses];

export type RemoveExerciseData = {
    body?: never;
    path: {
        exerciseRecordId: string;
    };
    query?: never;
    url: '/schedule/sessions/participants/exercises/{exerciseRecordId}';
};

export type RemoveExerciseResponses = {
    /**
     * OK
     */
    200: string;
};

export type RemoveExerciseResponse = RemoveExerciseResponses[keyof RemoveExerciseResponses];

export type UpdateExercise1Data = {
    body: ParticipantExerciseUpdateRequestDto;
    path: {
        exerciseRecordId: string;
    };
    query?: never;
    url: '/schedule/sessions/participants/exercises/{exerciseRecordId}';
};

export type UpdateExercise1Responses = {
    /**
     * OK
     */
    200: string;
};

export type UpdateExercise1Response = UpdateExercise1Responses[keyof UpdateExercise1Responses];

export type RestoreExerciseData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/exercises/{id}/restore';
};

export type RestoreExerciseResponses = {
    /**
     * OK
     */
    200: ExerciseResponseDto;
};

export type RestoreExerciseResponse = RestoreExerciseResponses[keyof RestoreExerciseResponses];

export type RestoreAdministratorData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/administrators/{id}/restore';
};

export type RestoreAdministratorResponses = {
    /**
     * OK
     */
    200: AdministratorResponseDto;
};

export type RestoreAdministratorResponse = RestoreAdministratorResponses[keyof RestoreAdministratorResponses];

export type GetSchedulesByTrainerData = {
    body?: never;
    path: {
        trainerId: string;
    };
    query?: never;
    url: '/trainer-schedules/trainer/{trainerId}';
};

export type GetSchedulesByTrainerResponses = {
    /**
     * OK
     */
    200: Array<TrainerScheduleResponseDto>;
};

export type GetSchedulesByTrainerResponse = GetSchedulesByTrainerResponses[keyof GetSchedulesByTrainerResponses];

export type GetScheduleData = {
    body?: never;
    path?: never;
    query: {
        startDate: string;
        endDate: string;
    };
    url: '/schedule';
};

export type GetScheduleResponses = {
    /**
     * OK
     */
    200: ScheduleResponseDto;
};

export type GetScheduleResponse = GetScheduleResponses[keyof GetScheduleResponses];

export type DeletePlanData = {
    body?: never;
    path: {
        planId: string;
    };
    query?: never;
    url: '/plans/{planId}';
};

export type DeletePlanResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetPlanByIdData = {
    body?: never;
    path: {
        planId: string;
    };
    query?: never;
    url: '/plans/{planId}';
};

export type GetPlanByIdResponses = {
    /**
     * OK
     */
    200: StudentPlanResponseDto;
};

export type GetPlanByIdResponse = GetPlanByIdResponses[keyof GetPlanByIdResponses];

export type GetStudentPlanHistoryData = {
    body?: never;
    path: {
        studentId: string;
    };
    query?: never;
    url: '/plans/students/{studentId}/history';
};

export type GetStudentPlanHistoryResponses = {
    /**
     * OK
     */
    200: Array<StudentPlanAssignmentResponseDto>;
};

export type GetStudentPlanHistoryResponse = GetStudentPlanHistoryResponses[keyof GetStudentPlanHistoryResponses];

export type GetCurrentStudentPlanData = {
    body?: never;
    path: {
        studentId: string;
    };
    query?: never;
    url: '/plans/students/{studentId}/current';
};

export type GetCurrentStudentPlanResponses = {
    /**
     * OK
     */
    200: StudentPlanAssignmentResponseDto;
};

export type GetCurrentStudentPlanResponse = GetCurrentStudentPlanResponses[keyof GetCurrentStudentPlanResponses];

export type GetExpiringSoonAssignmentsData = {
    body?: never;
    path?: never;
    query?: {
        days?: number;
    };
    url: '/plans/assignments/expiring-soon';
};

export type GetExpiringSoonAssignmentsResponses = {
    /**
     * OK
     */
    200: Array<StudentPlanAssignmentResponseDto>;
};

export type GetExpiringSoonAssignmentsResponse = GetExpiringSoonAssignmentsResponses[keyof GetExpiringSoonAssignmentsResponses];

export type GetAllActiveAssignmentsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/plans/assignments/active';
};

export type GetAllActiveAssignmentsResponses = {
    /**
     * OK
     */
    200: Array<StudentPlanAssignmentResponseDto>;
};

export type GetAllActiveAssignmentsResponse = GetAllActiveAssignmentsResponses[keyof GetAllActiveAssignmentsResponses];

export type GetStudentCommitmentsData = {
    body?: never;
    path: {
        studentId: string;
    };
    query?: never;
    url: '/commitments/students/{studentId}';
};

export type GetStudentCommitmentsResponses = {
    /**
     * OK
     */
    200: Array<CommitmentDetailResponseDto>;
};

export type GetStudentCommitmentsResponse = GetStudentCommitmentsResponses[keyof GetStudentCommitmentsResponses];

export type GetCurrentCommitmentStatusData = {
    body?: never;
    path: {
        studentId: string;
        sessionSeriesId: string;
    };
    query?: {
        timestamp?: string;
    };
    url: '/commitments/students/{studentId}/sessions/{sessionSeriesId}/status';
};

export type GetCurrentCommitmentStatusResponses = {
    /**
     * OK
     */
    200: 'ATTENDING' | 'NOT_ATTENDING' | 'TENTATIVE';
};

export type GetCurrentCommitmentStatusResponse = GetCurrentCommitmentStatusResponses[keyof GetCurrentCommitmentStatusResponses];

export type GetCommitmentHistoryData = {
    body?: never;
    path: {
        studentId: string;
        sessionSeriesId: string;
    };
    query?: never;
    url: '/commitments/students/{studentId}/sessions/{sessionSeriesId}/history';
};

export type GetCommitmentHistoryResponses = {
    /**
     * OK
     */
    200: Array<CommitmentDetailResponseDto>;
};

export type GetCommitmentHistoryResponse = GetCommitmentHistoryResponses[keyof GetCommitmentHistoryResponses];

export type GetCurrentActiveCommitmentsData = {
    body?: never;
    path: {
        studentId: string;
    };
    query?: {
        timestamp?: string;
    };
    url: '/commitments/students/{studentId}/active';
};

export type GetCurrentActiveCommitmentsResponses = {
    /**
     * OK
     */
    200: Array<CommitmentDetailResponseDto>;
};

export type GetCurrentActiveCommitmentsResponse = GetCurrentActiveCommitmentsResponses[keyof GetCurrentActiveCommitmentsResponses];

export type GetSessionSeriesCommitmentsData = {
    body?: never;
    path: {
        sessionSeriesId: string;
    };
    query?: never;
    url: '/commitments/sessions/{sessionSeriesId}';
};

export type GetSessionSeriesCommitmentsResponses = {
    /**
     * OK
     */
    200: Array<CommitmentDetailResponseDto>;
};

export type GetSessionSeriesCommitmentsResponse = GetSessionSeriesCommitmentsResponses[keyof GetSessionSeriesCommitmentsResponses];

export type GetAvailableSessionSeriesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/commitments/available-sessions';
};

export type GetAvailableSessionSeriesResponses = {
    /**
     * OK
     */
    200: Array<TrainerSchedule>;
};

export type GetAvailableSessionSeriesResponse = GetAvailableSessionSeriesResponses[keyof GetAvailableSessionSeriesResponses];

export type RemoveParticipantData = {
    body?: never;
    path: {
        sessionId: string;
        studentId: string;
    };
    query?: never;
    url: '/schedule/sessions/{sessionId}/participants/{studentId}';
};

export type RemoveParticipantResponses = {
    /**
     * OK
     */
    200: string;
};

export type RemoveParticipantResponse = RemoveParticipantResponses[keyof RemoveParticipantResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};