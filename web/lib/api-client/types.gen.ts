// This file is auto-generated by @hey-api/openapi-ts

export type CreateTrainerDto = {
    name?: string;
    email?: string;
    phone?: string;
    password?: string;
    address?: string;
    birthDate?: string;
    specialties?: Array<string>;
    compensationType?: 'HOURLY' | 'MONTHLY';
};

export type TrainerResponseDto = {
    id?: string;
    name?: string;
    email?: string;
    phone?: string;
    address?: string;
    birthDate?: string;
    specialties?: Array<string>;
    compensationType?: 'HOURLY' | 'MONTHLY';
    joinDate?: string;
    hoursWorked?: number;
};

export type AnamnesisRequestDto = {
    medication?: string;
    isDoctorAwareOfPhysicalActivity?: boolean;
    favoritePhysicalActivity?: string;
    hasInsomnia?: 'yes' | 'no' | 'sometimes';
    dietOrientedBy?: string;
    cardiacProblems?: string;
    hasHypertension?: boolean;
    chronicDiseases?: string;
    difficultiesInPhysicalActivities?: string;
    medicalOrientationsToAvoidPhysicalActivity?: string;
    surgeriesInTheLast12Months?: string;
    respiratoryProblems?: string;
    jointMuscularBackPain?: string;
    spinalDiscProblems?: string;
    diabetes?: string;
    smokingDuration?: string;
    alteredCholesterol?: boolean;
    osteoporosisLocation?: string;
};

export type PhysicalImpairmentRequestDto = {
    type: 'visual' | 'auditory' | 'motor' | 'intellectual' | 'other';
    name: string;
    observations?: string;
};

export type StudentRequestDto = {
    email: string;
    name: string;
    surname: string;
    gender: 'M' | 'F' | 'O';
    birthDate: string;
    phone?: string;
    profession?: string;
    street?: string;
    number?: string;
    complement?: string;
    neighborhood?: string;
    cep?: string;
    emergencyContactName?: string;
    emergencyContactPhone?: string;
    emergencyContactRelationship?: string;
    objectives?: string;
    observations?: string;
    anamnesis?: AnamnesisRequestDto;
    physicalImpairments?: Array<PhysicalImpairmentRequestDto>;
};

export type AnamnesisResponseDto = {
    medication?: string;
    isDoctorAwareOfPhysicalActivity?: boolean;
    favoritePhysicalActivity?: string;
    hasInsomnia?: 'yes' | 'no' | 'sometimes';
    dietOrientedBy?: string;
    cardiacProblems?: string;
    hasHypertension?: boolean;
    chronicDiseases?: string;
    difficultiesInPhysicalActivities?: string;
    medicalOrientationsToAvoidPhysicalActivity?: string;
    surgeriesInTheLast12Months?: string;
    respiratoryProblems?: string;
    jointMuscularBackPain?: string;
    spinalDiscProblems?: string;
    diabetes?: string;
    smokingDuration?: string;
    alteredCholesterol?: boolean;
    osteoporosisLocation?: string;
};

export type PhysicalImpairmentResponseDto = {
    id?: string;
    type?: 'visual' | 'auditory' | 'motor' | 'intellectual' | 'other';
    name?: string;
    observations?: string;
};

export type StudentResponseDto = {
    id?: string;
    email?: string;
    name?: string;
    surname?: string;
    gender?: 'M' | 'F' | 'O';
    birthDate?: string;
    phone?: string;
    profession?: string;
    street?: string;
    number?: string;
    complement?: string;
    neighborhood?: string;
    cep?: string;
    emergencyContactName?: string;
    emergencyContactPhone?: string;
    emergencyContactRelationship?: string;
    objectives?: string;
    observations?: string;
    registrationDate?: string;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
    anamnesis?: AnamnesisResponseDto;
    physicalImpairments?: Array<PhysicalImpairmentResponseDto>;
};

export type ExerciseRequestDto = {
    name: string;
    description?: string;
};

export type ExerciseResponseDto = {
    id?: string;
    name?: string;
    description?: string;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
};

export type CreateAdministratorDto = {
    firstName: string;
    lastName: string;
    email: string;
    password: string;
};

export type AdministratorResponseDto = {
    id?: string;
    firstName?: string;
    lastName?: string;
    email?: string;
    fullName?: string;
    active?: boolean;
    createdAt?: string;
    updatedAt?: string;
};

export type CreateUserRequestDto = {
    email: string;
    password: string;
    role?: 'ROLE_ADMIN' | 'ROLE_TRAINER' | 'ROLE_STUDENT';
};

export type UserResponseDto = {
    id?: string;
    email?: string;
    role?: 'ROLE_ADMIN' | 'ROLE_TRAINER' | 'ROLE_STUDENT';
};

export type ListTrainersDto = {
    id?: string;
    name?: string;
    email?: string;
    phone?: string;
    address?: string;
    birthDate?: string;
    specialties?: Array<string>;
    compensationType?: 'HOURLY' | 'MONTHLY';
    active?: boolean;
    joinDate?: string;
    hoursWorked?: number;
};

export type LoginRequestDto = {
    email: string;
    password: string;
};

export type JwtResponseDto = {
    id?: string;
    token?: string;
};

export type ListAdministratorsDto = {
    id?: string;
    firstName?: string;
    lastName?: string;
    email?: string;
    fullName?: string;
    active?: boolean;
    joinDate?: string;
};

export type PatchUserRoleRequestDto = {
    role?: 'ROLE_ADMIN' | 'ROLE_TRAINER' | 'ROLE_STUDENT';
};

export type PatchExerciseRequestDto = {
    name?: string;
    description?: string;
};

export type PatchAdministratorRequestDto = {
    firstName?: string;
    lastName?: string;
    email?: string;
    password?: string;
};

export type Pageable = {
    page?: number;
    size?: number;
    sort?: Array<string>;
};

export type PageUserResponseDto = {
    totalElements?: number;
    totalPages?: number;
    size?: number;
    content?: Array<UserResponseDto>;
    number?: number;
    sort?: SortObject;
    first?: boolean;
    last?: boolean;
    numberOfElements?: number;
    pageable?: PageableObject;
    empty?: boolean;
};

export type PageableObject = {
    offset?: number;
    sort?: SortObject;
    paged?: boolean;
    pageNumber?: number;
    pageSize?: number;
    unpaged?: boolean;
};

export type SortObject = {
    empty?: boolean;
    sorted?: boolean;
    unsorted?: boolean;
};

export type PageStudentResponseDto = {
    totalElements?: number;
    totalPages?: number;
    size?: number;
    content?: Array<StudentResponseDto>;
    number?: number;
    sort?: SortObject;
    first?: boolean;
    last?: boolean;
    numberOfElements?: number;
    pageable?: PageableObject;
    empty?: boolean;
};

export type PageExerciseResponseDto = {
    totalElements?: number;
    totalPages?: number;
    size?: number;
    content?: Array<ExerciseResponseDto>;
    number?: number;
    sort?: SortObject;
    first?: boolean;
    last?: boolean;
    numberOfElements?: number;
    pageable?: PageableObject;
    empty?: boolean;
};

export type PageListAdministratorsDto = {
    totalElements?: number;
    totalPages?: number;
    size?: number;
    content?: Array<ListAdministratorsDto>;
    number?: number;
    sort?: SortObject;
    first?: boolean;
    last?: boolean;
    numberOfElements?: number;
    pageable?: PageableObject;
    empty?: boolean;
};

export type SoftDeleteTrainerUserData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/trainers/{id}';
};

export type SoftDeleteTrainerUserResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type FindTrainerByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/trainers/{id}';
};

export type FindTrainerByIdResponses = {
    /**
     * OK
     */
    200: ListTrainersDto;
};

export type FindTrainerByIdResponse = FindTrainerByIdResponses[keyof FindTrainerByIdResponses];

export type UpdateTrainerAndUserData = {
    body: CreateTrainerDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/trainers/{id}';
};

export type UpdateTrainerAndUserResponses = {
    /**
     * OK
     */
    200: TrainerResponseDto;
};

export type UpdateTrainerAndUserResponse = UpdateTrainerAndUserResponses[keyof UpdateTrainerAndUserResponses];

export type DeleteData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/students/{id}';
};

export type DeleteResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type FindByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/students/{id}';
};

export type FindByIdResponses = {
    /**
     * OK
     */
    200: StudentResponseDto;
};

export type FindByIdResponse = FindByIdResponses[keyof FindByIdResponses];

export type UpdateData = {
    body: StudentRequestDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/students/{id}';
};

export type UpdateResponses = {
    /**
     * OK
     */
    200: StudentResponseDto;
};

export type UpdateResponse = UpdateResponses[keyof UpdateResponses];

export type Delete1Data = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/exercises/{id}';
};

export type Delete1Responses = {
    /**
     * OK
     */
    200: unknown;
};

export type FindById1Data = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/exercises/{id}';
};

export type FindById1Responses = {
    /**
     * OK
     */
    200: ExerciseResponseDto;
};

export type FindById1Response = FindById1Responses[keyof FindById1Responses];

export type PatchData = {
    body: PatchExerciseRequestDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/exercises/{id}';
};

export type PatchResponses = {
    /**
     * OK
     */
    200: ExerciseResponseDto;
};

export type PatchResponse = PatchResponses[keyof PatchResponses];

export type Update1Data = {
    body: ExerciseRequestDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/exercises/{id}';
};

export type Update1Responses = {
    /**
     * OK
     */
    200: ExerciseResponseDto;
};

export type Update1Response = Update1Responses[keyof Update1Responses];

export type SoftDeleteAdministratorUserData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/administrators/{id}';
};

export type SoftDeleteAdministratorUserResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type FindAdministratorByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/administrators/{id}';
};

export type FindAdministratorByIdResponses = {
    /**
     * OK
     */
    200: ListAdministratorsDto;
};

export type FindAdministratorByIdResponse = FindAdministratorByIdResponses[keyof FindAdministratorByIdResponses];

export type PatchAdministratorData = {
    body: PatchAdministratorRequestDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/administrators/{id}';
};

export type PatchAdministratorResponses = {
    /**
     * OK
     */
    200: AdministratorResponseDto;
};

export type PatchAdministratorResponse = PatchAdministratorResponses[keyof PatchAdministratorResponses];

export type UpdateAdministratorAndUserData = {
    body: CreateAdministratorDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/administrators/{id}';
};

export type UpdateAdministratorAndUserResponses = {
    /**
     * OK
     */
    200: AdministratorResponseDto;
};

export type UpdateAdministratorAndUserResponse = UpdateAdministratorAndUserResponses[keyof UpdateAdministratorAndUserResponses];

export type GetAllUsersSimpleData = {
    body?: never;
    path?: never;
    query: {
        pageable: Pageable;
    };
    url: '/users';
};

export type GetAllUsersSimpleResponses = {
    /**
     * OK
     */
    200: PageUserResponseDto;
};

export type GetAllUsersSimpleResponse = GetAllUsersSimpleResponses[keyof GetAllUsersSimpleResponses];

export type CreateUserData = {
    body: CreateUserRequestDto;
    path?: never;
    query?: never;
    url: '/users';
};

export type CreateUserResponses = {
    /**
     * OK
     */
    200: UserResponseDto;
};

export type CreateUserResponse = CreateUserResponses[keyof CreateUserResponses];

export type FindAllTrainersData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/trainers';
};

export type FindAllTrainersResponses = {
    /**
     * OK
     */
    200: Array<ListTrainersDto>;
};

export type FindAllTrainersResponse = FindAllTrainersResponses[keyof FindAllTrainersResponses];

export type CreateTrainerAndUserData = {
    body: CreateTrainerDto;
    path?: never;
    query?: never;
    url: '/trainers';
};

export type CreateTrainerAndUserResponses = {
    /**
     * OK
     */
    200: ListTrainersDto;
};

export type CreateTrainerAndUserResponse = CreateTrainerAndUserResponses[keyof CreateTrainerAndUserResponses];

export type FindAllData = {
    body?: never;
    path?: never;
    query: {
        search?: string;
        gender?: string;
        profession?: string;
        minAge?: number;
        maxAge?: number;
        registrationPeriodMinDate?: string;
        registrationPeriodMaxDate?: string;
        includeInactive?: boolean;
        pageable: Pageable;
    };
    url: '/students';
};

export type FindAllResponses = {
    /**
     * OK
     */
    200: PageStudentResponseDto;
};

export type FindAllResponse = FindAllResponses[keyof FindAllResponses];

export type CreateData = {
    body: StudentRequestDto;
    path?: never;
    query?: never;
    url: '/students';
};

export type CreateResponses = {
    /**
     * OK
     */
    200: StudentResponseDto;
};

export type CreateResponse = CreateResponses[keyof CreateResponses];

export type FindAll1Data = {
    body?: never;
    path?: never;
    query: {
        search?: string;
        includeInactive?: boolean;
        pageable: Pageable;
    };
    url: '/exercises';
};

export type FindAll1Responses = {
    /**
     * OK
     */
    200: PageExerciseResponseDto;
};

export type FindAll1Response = FindAll1Responses[keyof FindAll1Responses];

export type Create1Data = {
    body: ExerciseRequestDto;
    path?: never;
    query?: never;
    url: '/exercises';
};

export type Create1Responses = {
    /**
     * OK
     */
    200: ExerciseResponseDto;
};

export type Create1Response = Create1Responses[keyof Create1Responses];

export type LogoutData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/logout';
};

export type LogoutResponses = {
    /**
     * OK
     */
    200: string;
};

export type LogoutResponse = LogoutResponses[keyof LogoutResponses];

export type LoginData = {
    body: LoginRequestDto;
    path?: never;
    query?: never;
    url: '/auth/login';
};

export type LoginResponses = {
    /**
     * OK
     */
    200: JwtResponseDto;
};

export type LoginResponse = LoginResponses[keyof LoginResponses];

export type FindAllAdministratorsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/administrators';
};

export type FindAllAdministratorsResponses = {
    /**
     * OK
     */
    200: Array<ListAdministratorsDto>;
};

export type FindAllAdministratorsResponse = FindAllAdministratorsResponses[keyof FindAllAdministratorsResponses];

export type CreateAdministratorAndUserData = {
    body: CreateAdministratorDto;
    path?: never;
    query?: never;
    url: '/administrators';
};

export type CreateAdministratorAndUserResponses = {
    /**
     * OK
     */
    200: ListAdministratorsDto;
};

export type CreateAdministratorAndUserResponse = CreateAdministratorAndUserResponses[keyof CreateAdministratorAndUserResponses];

export type Patch1Data = {
    body: PatchUserRoleRequestDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/users/{id}';
};

export type Patch1Responses = {
    /**
     * OK
     */
    200: UserResponseDto;
};

export type Patch1Response = Patch1Responses[keyof Patch1Responses];

export type RestoreData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/students/{id}/restore';
};

export type RestoreResponses = {
    /**
     * OK
     */
    200: StudentResponseDto;
};

export type RestoreResponse = RestoreResponses[keyof RestoreResponses];

export type Restore1Data = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/exercises/{id}/restore';
};

export type Restore1Responses = {
    /**
     * OK
     */
    200: ExerciseResponseDto;
};

export type Restore1Response = Restore1Responses[keyof Restore1Responses];

export type TestData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/administrators/test';
};

export type TestResponses = {
    /**
     * OK
     */
    200: string;
};

export type TestResponse = TestResponses[keyof TestResponses];

export type FindAllPaginatedData = {
    body?: never;
    path?: never;
    query: {
        search?: string;
        includeInactive?: boolean;
        pageable: Pageable;
    };
    url: '/administrators/paginated';
};

export type FindAllPaginatedResponses = {
    /**
     * OK
     */
    200: PageListAdministratorsDto;
};

export type FindAllPaginatedResponse = FindAllPaginatedResponses[keyof FindAllPaginatedResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};